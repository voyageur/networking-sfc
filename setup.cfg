[metadata]
name = networking-sfc
summary = API's and implementations to support Service Function Chaining in Neutron.
description-file = README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://docs.openstack.org/developer/networking-sfc/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5

[files]
packages =
    networking_sfc

[entry_points]
openstack.cli.extension =
    neutronclient = networking_sfc.osc.plugin

openstack.neutronclient.v2 =
    sfc_port_pair_create = networking_sfc.osc.sfc.port_pair:CreatePortPair
    sfc_port_pair_delete = networking_sfc.osc.sfc.port_pair:DeletePortPair
    sfc_port_pair_update = networking_sfc.osc.sfc.port_pair:UpdatePortPair
    sfc_port_pair_list = networking_sfc.osc.sfc.port_pair:ListPortPair
    sfc_port_pair_show = networking_sfc.osc.sfc.port_pair:ShowPortPair
    sfc_port_pair_group_create = networking_sfc.osc.sfc.port_pair_group:CreatePortPairGroup
    sfc_port_pair_group_delete = networking_sfc.osc.sfc.port_pair_group:DeletePortPairGroup
    sfc_port_pair_group_update = networking_sfc.osc.sfc.port_pair_group:UpdatePortPairGroup
    sfc_port_pair_group_list = networking_sfc.osc.sfc.port_pair_group:ListPortPairGroup
    sfc_port_pair_group_show = networking_sfc.osc.sfc.port_pair_group:ShowPortPairGroup
    sfc_port_chain_create = networking_sfc.osc.sfc.port_chain:CreatePortChain
    sfc_port_chain_delete = networking_sfc.osc.sfc.port_chain:DeletePortChain
    sfc_port_chain_update = networking_sfc.osc.sfc.port_chain:UpdatePortChain
    sfc_port_chain_list = networking_sfc.osc.sfc.port_chain:ListPortChain
    sfc_port_chain_show = networking_sfc.osc.sfc.port_chain:ShowPortChain
    sfc_flow_classifier_create = networking_sfc.osc.flow_classifier.flow_classifier:CreateFlowClassifier
    sfc_flow_classifier_delete = networking_sfc.osc.flow_classifier.flow_classifier:DeleteFlowClassifier
    sfc_flow_classifier_update = networking_sfc.osc.flow_classifier.flow_classifier:UpdateFlowClassifier
    sfc_flow_classifier_list = networking_sfc.osc.flow_classifier.flow_classifier:ListFlowClassifier
    sfc_flow_classifier_show = networking_sfc.osc.flow_classifier.flow_classifier:ShowFlowClassifier


neutronclient.extension=
    flow_classifier = networking_sfc.cli.flow_classifier
    port_chain = networking_sfc.cli.port_chain
    port_pair = networking_sfc.cli.port_pair
    port_pair_group = networking_sfc.cli.port_pair_group
neutron.db.alembic_migrations =
    networking-sfc = networking_sfc.db.migration:alembic_migrations
neutron.service_plugins =
    flow_classifier = networking_sfc.services.flowclassifier.plugin:FlowClassifierPlugin
    sfc = networking_sfc.services.sfc.plugin:SfcPlugin
networking_sfc.sfc.drivers =
    dummy = networking_sfc.services.sfc.drivers.dummy.dummy:DummyDriver
    ovs = networking_sfc.services.sfc.drivers.ovs.driver:OVSSfcDriver
    ovn = networking_sfc.services.sfc.drivers.ovn.driver:OVNSfcDriver

networking_sfc.flowclassifier.drivers =
    dummy = networking_sfc.services.flowclassifier.drivers.dummy.dummy:DummyDriver
    ovs = networking_sfc.services.flowclassifier.drivers.ovs.driver:OVSFlowClassifierDriver
    ovn = networking_sfc.services.flowclassifier.drivers.ovn.driver:OVNFlowClassifierDriver
neutron.agent.l2.extensions =
    sfc = networking_sfc.services.sfc.agent.extensions.sfc:SfcAgentExtension
networking_sfc.sfc.agent_drivers =
    ovs = networking_sfc.services.sfc.agent.extensions.openvswitch.sfc_driver:SfcOVSAgentDriver
tempest.test_plugins =
    networking-sfc = networking_sfc.tests.tempest_plugin.plugin:NetworkingSfcPlugin

[build_sphinx]
source-dir = doc/source
build-dir = doc/build
all_files = 1

[upload_sphinx]
upload-dir = doc/build/html

[compile_catalog]
directory = networking_sfc/locale
domain = networking-sfc

[update_catalog]
domain = networking-sfc
output_dir = networking_sfc/locale
input_file = networking_sfc/locale/networking-sfc.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = networking_sfc/locale/networking-sfc.pot
